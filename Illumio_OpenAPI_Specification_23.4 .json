{
    "openapi": "3.0.0",
    "info": {
        "title": "Illumio OpenAPI 23.4.0-1631",
        "version": "23.4.0-1631"
    },
    "paths": {
        "/orgs/{org_id}/datafiles/{uuid}": {
            "get": {
                "tags": [
                    "datafiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "uuid of file resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filename",
                        "description": "Filename to save as",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/{nd_uuid}/network_endpoints": {
            "get": {
                "tags": [
                    "network_endpoints"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_devices_network_endpoints_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "network_endpoints"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_network_endpoints_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/{nd_uuid}/network_endpoints/{ep_uuid}": {
            "get": {
                "tags": [
                    "network_endpoints"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ep_uuid",
                        "description": "uuid of network_endpoint resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_devices_network_endpoints_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network_endpoint"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ep_uuid",
                        "description": "uuid of network_endpoint resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_network_endpoints_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "network_endpoint"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ep_uuid",
                        "description": "uuid of network_endpoint resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices": {
            "get": {
                "tags": [
                    "network_devices"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "device_type",
                        "description": "Type of supported device",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "Device manufacturer",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model",
                        "description": "Device model",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "device name",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_devices_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/multi_enforcement_instructions_request": {
            "post": {
                "tags": [
                    "network_devices"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_multi_enforcement_instructions_request_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/multi_enforcement_instructions_applied": {
            "post": {
                "tags": [
                    "network_devices"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_multi_enforcement_instructions_applied_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/{nd_uuid}": {
            "get": {
                "tags": [
                    "network_devices"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_devices_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network_device"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "network_device"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_enforcement_nodes/{uuid}/network_devices": {
            "post": {
                "tags": [
                    "network_devices"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "Network enforcement node uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_enforcement_nodes_network_devices_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/{nd_uuid}/enforcement_instructions_request": {
            "post": {
                "tags": [
                    "network_device"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_enforcement_instructions_request_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_devices/{nd_uuid}/enforcement_instructions_applied": {
            "post": {
                "tags": [
                    "network_device"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "nd_uuid",
                        "description": "uuid of device resource",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_devices_enforcement_instructions_applied_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_enforcement_nodes": {
            "get": {
                "tags": [
                    "network_enforcement_nodes"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "condition",
                        "description": "A specific error condition to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "network_enforcement_node.missed_heartbeats",
                                "network_enforcement_node.degraded"
                            ]
                        }
                    },
                    {
                        "name": "device_type",
                        "description": "Type of supported device",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "health",
                        "description": "The overall health (condition) of the Network Enforcement Node",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "healthy",
                                "unhealthy",
                                "error",
                                "warning"
                            ]
                        }
                    },
                    {
                        "name": "manufacturer",
                        "description": "Device manufacturer",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "model",
                        "description": "Device model",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_enforcement_nodes_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/network_enforcement_nodes/{uuid}": {
            "get": {
                "tags": [
                    "network_enforcement_nodes"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "Network enforcement node uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_enforcement_nodes_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "network_enforcement_node"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "Network enforcement node uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/network_enforcement_nodes_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/network_enforcement_nodes/virtual_server_discovery_jobs/{job_uuid}": {
            "get": {
                "tags": [
                    "network_enforcement_nodes"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job_uuid",
                        "description": "uuid of virtual server discovery job",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/network_enforcement_nodes_virtual_server_discovery_jobs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login_users/authenticate": {
            "post": {
                "tags": [
                    "login_users"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "one_time_password",
                        "description": "The time-based one-time password for two-factor authentication.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pce_fqdn",
                        "description": "Fully qualified name of PCE",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/login_users_authenticate_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/login_users/{user_uuid}/password": {
            "put": {
                "tags": [
                    "login_user"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_uuid",
                        "description": "User UUID; use 'me' for the currently authenticated user",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "one_time_password",
                        "description": "The time-based one-time password for two-factor authentication.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/login_users_password_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/database_metrics": {
            "get": {
                "tags": [
                    "traffic_flows_database_metrics"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/traffic_flows_database_metrics_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/async_queries": {
            "post": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/traffic_flows_async_queries_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/traffic_flows_async_queries_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/async_queries/{uuid}": {
            "get": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "async query uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/traffic_flows_async_queries_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "async query uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/traffic_flows_async_queries_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "async query uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/async_queries/{uuid}/download": {
            "get": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "async query uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/traffic_flows_async_queries_download_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/async_queries/{uuid}/update_rules": {
            "put": {
                "tags": [
                    "traffic_flows_async_queries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "async query uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/traffic_flows_async_queries_update_rules_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/traffic_flows/traffic_analysis_queries": {
            "post": {
                "tags": [
                    "traffic_flows"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/traffic_flows_traffic_analysis_queries_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads": {
            "post": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "agent.active_pce_fqdn",
                        "description": "FQDN of the PCE",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container_clusters",
                        "description": "List  of container cluster URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_mode",
                        "description": "Enforcement mode of workload(s) to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "visibility_only",
                                "full",
                                "idle",
                                "selective"
                            ]
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hostname",
                        "description": "Hostname of workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "description": "Include deleted workloads",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ip_address",
                        "description": "IP address of workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat_on[gte]",
                        "description": "Greater than or equal to value for last heartbeat on timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "last_heartbeat_on[lte]",
                        "description": "Less than or equal to value for last heartbeat on timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "log_traffic",
                        "description": "Whether we want to log traffic events from this workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "managed",
                        "description": "Return managed or unmanaged workloads using this filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of workloads to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mode",
                        "description": "Management mode of workload(s) to return. DEPRECATED AND REPLACED (Use enforcement_mode)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "online",
                        "description": "Return online/offline workloads using this filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "os_id",
                        "description": "Operating System of workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "policy_health",
                        "description": "Policy of health of workload(s) to return. Valid values: active, warning, error, suspended",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "risk_summary.ransomware.workload_exposure_severity",
                        "description": "The ransomware severity of the workload. Valid values: low, medium, high, critical, fully_protected",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "security_policy_sync_state",
                        "description": "Advanced search option for workload based on policy sync state",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "staged"
                            ]
                        }
                    },
                    {
                        "name": "security_policy_update_mode",
                        "description": "Advanced search option for workload based on security policy update mode",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "static",
                                "adaptive"
                            ]
                        }
                    },
                    {
                        "name": "soft_deleted",
                        "description": "DEPRECATED WITH NO REPLACEMENT: Only soft-deleted workloads",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ven",
                        "description": "URI of VEN to filter by.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ven.ven_type",
                        "description": "Return only Workloads with VENs of the specific type: server, endpoint, or containerized",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "visibility_level",
                        "description": "Filter by visibility level",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flow_full_detail",
                                "flow_summary",
                                "flow_drops",
                                "flow_off",
                                "enhanced_data_collection"
                            ]
                        }
                    },
                    {
                        "name": "vulnerability_summary.vulnerability_exposure_score[gte]",
                        "description": "Greater than or equal to value for vulnerability_exposure_score",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vulnerability_summary.vulnerability_exposure_score[lte]",
                        "description": "Less than or equal to value for vulnerability_exposure_score",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/workloads_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/unpair": {
            "put": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_unpair_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/bulk_create": {
            "put": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_bulk_create_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/bulk_update": {
            "put": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_bulk_update_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/bulk_delete": {
            "put": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_bulk_delete_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/{workload_id}": {
            "get": {
                "tags": [
                    "workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/workloads_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "workload"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "workload"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/{workload_id}/risk_details": {
            "get": {
                "tags": [
                    "workload"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/workloads_risk_details_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/labels": {
            "get": {
                "tags": [
                    "labels"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "description": "Include deleted labels",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "key",
                        "description": "Key by which to filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Labels to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include label usage flags as well",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "value",
                        "description": "Value on which to filter. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/labels_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "labels"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/labels_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/labels/{label_id}": {
            "get": {
                "tags": [
                    "labels"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "label_id",
                        "description": "Label ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include label usage flags as well",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/labels_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "label"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "label_id",
                        "description": "Label ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/labels_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "label"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "label_id",
                        "description": "Label ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/security_principals": {
            "get": {
                "tags": [
                    "security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of entries to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of security principal to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sid",
                        "description": "SID of security principal to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/security_principals_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/security_principals_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/security_principals/bulk_create": {
            "put": {
                "tags": [
                    "security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/security_principals_bulk_create_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/security_principals/{sid}": {
            "get": {
                "tags": [
                    "security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sid",
                        "description": "Security principal SID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/security_principals_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "security_principal"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sid",
                        "description": "Security principal SID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/security_principals_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "security_principal"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sid",
                        "description": "Security principal SID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/pairing_profiles": {
            "get": {
                "tags": [
                    "pairing_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "agent_software_release",
                        "description": "The agent software release for pairing profiles",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of Pairing Profile(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Pairing Profiles to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of Pairing Profile(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ven_type",
                        "description": "Specifies the pairing profile by the VEN type: server, endpoint, or specified_during_activation",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "specified_during_activation",
                                "server",
                                "endpoint"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/pairing_profiles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "pairing_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/pairing_profiles_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/pairing_profiles/{pairing_profile_id}": {
            "get": {
                "tags": [
                    "pairing_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pairing_profile_id",
                        "description": "Pairing Profile ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/pairing_profiles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pairing_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pairing_profile_id",
                        "description": "Pairing Profile ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/pairing_profiles_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pairing_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pairing_profile_id",
                        "description": "Pairing Profile ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/pairing_profiles/{pairing_profile_id}/pairing_key": {
            "post": {
                "tags": [
                    "pairing_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pairing_profile_id",
                        "description": "Pairing Profile ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/pairing_profiles_pairing_key_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/pairing_profiles/{pairing_profile_id}/pairing_keys": {
            "delete": {
                "tags": [
                    "pairing_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pairing_profile_id",
                        "description": "Pairing Profile ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/enforcement_boundaries": {
            "get": {
                "tags": [
                    "enforcement_boundaries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of enforcement boundaries to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Filter by name supports partial matching",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_type",
                        "description": "Filter by network type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "description": "Service URI",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_ports.port",
                        "description": "Specify port or port range to filter results. The range is from -1 to 65535.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_ports.proto",
                        "description": "Protocol to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_enforcement_boundaries_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "enforcement_boundaries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_enforcement_boundaries_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/enforcement_boundaries/{enforcement_boundary_id}": {
            "get": {
                "tags": [
                    "enforcement_boundaries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_boundary_id",
                        "description": "Enforcement boundary ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_enforcement_boundaries_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "enforcement_boundary"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_boundary_id",
                        "description": "Enforcement boundary ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_enforcement_boundaries_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enforcement_boundary"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_boundary_id",
                        "description": "Enforcement boundary ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_services": {
            "get": {
                "tags": [
                    "virtual_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description on which to filter. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Virtual Services to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name on which to filter. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service",
                        "description": "Service URI",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_address.fqdn",
                        "description": "FQDN configured under service_address property, supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_address.ip",
                        "description": "IP address configured under service_address property, supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_ports.port",
                        "description": "Specify port or port range to filter results. The range is from -1 to 65535.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_ports.proto",
                        "description": "Protocol to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include Virtual Service usage flags",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_virtual_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "virtual_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_services_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_services/bulk_create": {
            "put": {
                "tags": [
                    "virtual_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_services_bulk_create_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_services/bulk_update": {
            "put": {
                "tags": [
                    "virtual_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_services_bulk_update_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_services/{virtual_service_id}": {
            "get": {
                "tags": [
                    "virtual_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_service_id",
                        "description": "Virtual Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include Virtual Service usage flags",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_virtual_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "virtual_service"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_service_id",
                        "description": "Virtual Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_services_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "virtual_service"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_service_id",
                        "description": "Virtual Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/ip_lists": {
            "get": {
                "tags": [
                    "ip_lists"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of IP list(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fqdn",
                        "description": "IP lists matching FQDN. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_address",
                        "description": "IP address matching IP list(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of IP Lists to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of IP list(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_ip_lists_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ip_lists"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_ip_lists_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/ip_lists/{ip_list_id}": {
            "get": {
                "tags": [
                    "ip_lists"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_list_id",
                        "description": "IP list ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_ip_lists_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ip_list"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_list_id",
                        "description": "IP list ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_ip_lists_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ip_list"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_list_id",
                        "description": "IP list ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/label_groups": {
            "post": {
                "tags": [
                    "label_groups"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_label_groups_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "label_groups"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of Label Group(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "description": "Key by which to filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Labels to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of Label Group(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include label usage flags as well",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_label_groups_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/label_groups/{label_group_id}": {
            "get": {
                "tags": [
                    "label_groups"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_group_id",
                        "description": "Label Group UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "usage",
                        "description": "Include label usage flags as well",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_label_groups_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "label_group"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_group_id",
                        "description": "Label Group UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_label_groups_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "label_group"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_group_id",
                        "description": "Label Group UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/label_groups/{label_group_id}/member_of": {
            "get": {
                "tags": [
                    "label_group"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_group_id",
                        "description": "Label Group UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_label_groups_member_of_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/label_groups/{label_group_id}/all_labels": {
            "get": {
                "tags": [
                    "label_group"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "label_group_id",
                        "description": "Label Group UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/labels_summary.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/services": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of Service(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_ransomware",
                        "description": "Services associated with ransomware.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Services to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of Service(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "port",
                        "description": "Specify port or port range to filter results. The range is from -1 to 65535 (0 is not supported).",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proto",
                        "description": "Protocol to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_services_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/services/{service_id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_id",
                        "description": "Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "service"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_id",
                        "description": "Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_services_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "service"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_id",
                        "description": "Service ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_servers": {
            "post": {
                "tags": [
                    "virtual_servers"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_servers_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "virtual_servers"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active_pce_fqdn",
                        "description": "FQDN of the PCE",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "discovered_virtual_server",
                        "description": "URI of discovered virtual server to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "2D array of label URIs, encoded as a JSON string. Filter by virtual server labels.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of discovered virtual servers to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "mode",
                        "description": "Mode of the virtual server(s) to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unmanaged",
                                "enforced"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of virtual server(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_enforcement_node.hostname",
                        "description": "Hostname of NEN object to filter virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slb",
                        "description": "URI of SLB object to filter virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vip",
                        "description": "Frontend (VIP) address of the virtual server(s). Supports suffix-wildcard matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vip_port",
                        "description": "Port of frontend VIP of the virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vip_proto",
                        "description": "Protocol of frontend VIP of the virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_virtual_servers_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/virtual_servers/{virtual_server_id}": {
            "get": {
                "tags": [
                    "virtual_servers"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_server_id",
                        "description": "Virtual server UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_virtual_servers_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "virtual_server"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_server_id",
                        "description": "Virtual server UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_virtual_servers_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "virtual_server"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_server_id",
                        "description": "Virtual server UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/rule_sets": {
            "get": {
                "tags": [
                    "rule_sets"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of Rule Set(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of Rule Sets to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of Rule Set(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_rule_sets_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rule_sets"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_rule_sets_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/rule_sets/{rule_set_id}": {
            "get": {
                "tags": [
                    "rule_sets"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_rule_sets_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "rule_set"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_rule_sets_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "rule_set"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters/{container_cluster_id}/container_workload_profiles": {
            "get": {
                "tags": [
                    "container_workload_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assign_labels",
                        "description": "List of lists of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_mode",
                        "description": "Filter by enforcement mode.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "visibility_only",
                                "full",
                                "idle",
                                "selective"
                            ]
                        }
                    },
                    {
                        "name": "linked",
                        "description": "Filter by linked container workload profiles.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "managed",
                        "description": "Filter by managed state",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of container workloads to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name string to match.Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "description": "Namespace string to match.Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "visibility_level",
                        "description": "Filter by visibility level",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flow_full_detail",
                                "flow_summary",
                                "flow_drops",
                                "flow_off",
                                "enhanced_data_collection"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/container_clusters_container_workload_profiles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "container_workload_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/container_clusters_container_workload_profiles_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters/{container_cluster_id}/container_workload_profiles/update": {
            "put": {
                "tags": [
                    "container_workload_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/container_clusters_container_workload_profiles_update_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters/{container_cluster_id}/container_workload_profiles/{container_workload_profile_id}": {
            "get": {
                "tags": [
                    "container_workload_profiles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container_workload_profile_id",
                        "description": "Container workload profile UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/container_clusters_container_workload_profiles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "container_workload_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container_workload_profile_id",
                        "description": "Container workload profile UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/container_clusters_container_workload_profiles_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "container_workload_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "container_workload_profile_id",
                        "description": "Container workload profile UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters": {
            "get": {
                "tags": [
                    "container_clusters"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of container clusters to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of the container cluster(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/container_clusters_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "container_clusters"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/container_clusters_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters/{container_cluster_id}": {
            "get": {
                "tags": [
                    "container_clusters"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/container_clusters_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "container_cluster"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/container_clusters_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "container_cluster"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/container_clusters/{container_cluster_id}/service_backends": {
            "get": {
                "tags": [
                    "container_cluster"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_cluster_id",
                        "description": "Cluster UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/container_clusters_service_backends_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/vens": {
            "get": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "activation_type",
                        "description": "The method in which the VEN was activated",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pairing_key",
                                "kerberos",
                                "ca_signed_certificate",
                                "self_signed_certificate"
                            ]
                        }
                    },
                    {
                        "name": "active_pce_fqdn",
                        "description": "FQDN of the PCE",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authentication_recovery",
                        "description": "Return VENs in or not in authentication recovery",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "condition",
                        "description": "A specific error condition to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "agent.upgrade_time_out",
                                "agent.missing_heartbeats_after_upgrade",
                                "agent.clone_detected",
                                "agent.missed_heartbeats",
                                "agent.too_many_interfaces_reported",
                                "agent.authentication_recovery",
                                "agent.self_signed_certificate_in_grace_period",
                                "agent.self_signed_certificate_expired",
                                "agent.unauthenticated_clone_detected"
                            ]
                        }
                    },
                    {
                        "name": "container_clusters",
                        "description": "Array of container cluster URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of VEN(s) to return. Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disconnected_before",
                        "description": "Return VENs that have been disconnected since the given time",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "health",
                        "description": "The overall health (condition) of the VEN",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "healthy",
                                "unhealthy",
                                "error",
                                "warning"
                            ]
                        }
                    },
                    {
                        "name": "hostname",
                        "description": "Hostname of VEN(s) to return. Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ip_address",
                        "description": "IP address of VEN(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "2D Array of label URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_goodbye_at[gte]",
                        "description": "Greater than or equal to value for last goodbye at timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "last_goodbye_at[lte]",
                        "description": "Less than or equal to value for last goodbye at timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "last_heartbeat_at[gte]",
                        "description": "Greater than or equal to value for last heartbeat timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "last_heartbeat_at[lte]",
                        "description": "Less than or equal to value for last heartbeat timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of VENs to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of VEN(s) to return. Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "os",
                        "description": "Operating System of VEN(s) to return. Supports partial matches.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "description": "The current status of the VEN",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "suspended",
                                "stopped",
                                "uninstalled"
                            ]
                        }
                    },
                    {
                        "name": "upgrade_pending",
                        "description": "Only return VENs with/without a pending upgrade",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ven_type",
                        "description": "Return only VENs of the specific type: server, endpoint, or containerized",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "containerized"
                            ]
                        }
                    },
                    {
                        "name": "version[gte]",
                        "description": "Greater than or equal to value for version",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version[lte]",
                        "description": "Less than or equal to value for version",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vens_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/vens/unpair": {
            "put": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vens_unpair_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vens/upgrade": {
            "put": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vens_upgrade_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vens/authentication_recovery": {
            "put": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vens_authentication_recovery_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vens/statistics": {
            "post": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vens_statistics_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vens/{ven_id}": {
            "get": {
                "tags": [
                    "vens"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ven_id",
                        "description": "VEN id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vens_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ven"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ven_id",
                        "description": "VEN id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vens_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/permissions": {
            "get": {
                "tags": [
                    "org_permissions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "auth_security_principal",
                        "description": "Auth_security_principal URI (JSON-encoded string) to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "Role URI (JSON-encoded string) to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "description": "Scope to filter on, where scope is in the format defined in org_scope.schema.json",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_permissions_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "org_permissions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_permissions_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/permissions/{permission_id}": {
            "get": {
                "tags": [
                    "org_permissions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "permission_id",
                        "description": "UUID of the permission",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_permissions_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "org_permission"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "permission_id",
                        "description": "UUID of the permission",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_permissions_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "org_permission"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "permission_id",
                        "description": "UUID of the permission",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/slbs": {
            "post": {
                "tags": [
                    "slbs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/slbs_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "slbs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "description": "Description of the SLB to filter. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_type",
                        "description": "Device type to filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has_virtual_server",
                        "description": "Filtering criteria -  if the SLB has a virtual server",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of SLBs to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name on which to filter. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "num_devices",
                        "description": "Number of devices to filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "description": "SLB status to filter",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "pending",
                                "error"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/slbs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/slbs/{slb_id}": {
            "get": {
                "tags": [
                    "slbs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slb_id",
                        "description": "Slb UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/slbs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "slb"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slb_id",
                        "description": "Slb UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/slbs_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "slb"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "slb_id",
                        "description": "Slb UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/discovered_virtual_servers": {
            "get": {
                "tags": [
                    "discovered_virtual_servers"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "active_pce_fqdn",
                        "description": "FQDN of the PCE",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has_virtual_server",
                        "description": "Filter discovered virtual server(s) by whether they are managed by a virtual server object",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of discovered virtual servers to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of discovered virtual server(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_enforcement_node.hostname",
                        "description": "Hostname of NEN object to filter discovered virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "slb",
                        "description": "URI of SLB object to filter discovered virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vip",
                        "description": "Frontend (VIP) address of the discovered virtual server(s). Supports suffix-wildcard matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vip_port",
                        "description": "Port of frontend VIP of the discovered virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "vip_proto",
                        "description": "Protocol of frontend VIP of the discovered virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "virtual_server",
                        "description": "URI of virtual server to filter discovered virtual server(s)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_server_labels",
                        "description": "2D array of label URIs, encoded as a JSON string. Filter by virtual server labels. Requires usage of has_virtual_server: true",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "virtual_server_mode",
                        "description": "Filter discovered virtual server(s) by virtual server mode. Requires usage of has_virtual_server: true",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unmanaged",
                                "enforced"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/discovered_virtual_servers_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/discovered_virtual_servers/{discovered_virtual_server_id}": {
            "get": {
                "tags": [
                    "discovered_virtual_servers"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "discovered_virtual_server_id",
                        "description": "Discovered virtual servers UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/discovered_virtual_servers_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/service_accounts": {
            "post": {
                "tags": [
                    "service_accounts"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/service_accounts_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "service_accounts"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of service accounts to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of service account to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "Role URI (JSON-encoded string) to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/service_accounts_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/service_accounts/{service_account_id}": {
            "get": {
                "tags": [
                    "service_accounts"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_account_id",
                        "description": "Service account UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/service_accounts_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "service_account"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_account_id",
                        "description": "Service account UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/service_accounts_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "service_account"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_account_id",
                        "description": "Service account UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/kubernetes_workloads": {
            "get": {
                "tags": [
                    "kubernetes_workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "container_clusters",
                        "description": "List  of container cluster URIs, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "enforcement_mode",
                        "description": "Enforcement mode of kubernetes workload(s) to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "visibility_only",
                                "full",
                                "idle",
                                "selective"
                            ]
                        }
                    },
                    {
                        "name": "kind",
                        "description": "k8s resource kind (Deployment, ReplicaSet, etc.)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "labels",
                        "description": "List of label URIs to include, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of kubernetes workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "description": "Namespace of kubernetes workload(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "no_labels",
                        "description": "List of label URIs to NOT include, encoded as a JSON string",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "security_policy_applied_at[gte]",
                        "description": "Greater than or equal to value for security policy applied at timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "syncing",
                                "applied"
                            ]
                        }
                    },
                    {
                        "name": "security_policy_applied_at[lte]",
                        "description": "Less than or equal to value for security policy applied at timestamp",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "syncing",
                                "applied"
                            ]
                        }
                    },
                    {
                        "name": "security_policy_sync_state",
                        "description": "Search option based on policy sync state",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "syncing",
                                "applied"
                            ]
                        }
                    },
                    {
                        "name": "visibility_level",
                        "description": "Filter by visibility level",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "flow_full_detail",
                                "flow_summary",
                                "flow_drops",
                                "flow_off",
                                "enhanced_data_collection"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/kubernetes_workloads_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/kubernetes_workloads/{kubernetes_workload_id}": {
            "get": {
                "tags": [
                    "kubernetes_workloads"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "kubernetes_workload_id",
                        "description": "KubernetesWorkload uuid",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/kubernetes_workloads_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/software/ven/releases/{release}/images": {
            "get": {
                "tags": [
                    "ven_software_images"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "release",
                        "description": "Release identifier",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/software_ven_releases_images_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/software/ven/releases": {
            "get": {
                "tags": [
                    "ven_software_releases"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ven_type",
                        "description": "Return releases that support a specific VEN type (server or endpoint) or releases that only support both servers and endpoints (all)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "server",
                                "endpoint",
                                "all"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/software_ven_releases_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/software/ven/releases/default": {
            "put": {
                "tags": [
                    "ven_software_releases"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/software_ven_releases_default_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/software/ven/releases/defaults": {
            "put": {
                "tags": [
                    "ven_software_releases"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/software_ven_releases_defaults_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/software/ven/releases/{release}": {
            "get": {
                "tags": [
                    "ven_software_releases"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "release",
                        "description": "Release identifier",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/software_ven_releases_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ven_software_release"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "release",
                        "description": "Release identifier",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/agents/{agent_id}": {
            "get": {
                "tags": [
                    "agents"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "agent_id",
                        "description": "Agent ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/agents_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/agents/{agent_id}/update": {
            "put": {
                "tags": [
                    "agent"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "agent_id",
                        "description": "Agent ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/agents_update_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vulnerabilities": {
            "get": {
                "tags": [
                    "vulnerabilities"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of vulnerabilities to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vulnerabilities_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vulnerabilities"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vulnerabilities_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vulnerabilities/{reference_id}": {
            "get": {
                "tags": [
                    "vulnerabilities"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vulnerabilities_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vulnerability"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vulnerabilities_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "vulnerability"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/vulnerability_reports": {
            "get": {
                "tags": [
                    "vulnerability_reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of vulnerability_reports to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vulnerability_reports_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/vulnerability_reports/{reference_id}": {
            "get": {
                "tags": [
                    "vulnerability_reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Report Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/vulnerability_reports_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vulnerability_report"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Report Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/vulnerability_reports_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "vulnerability_report"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reference_id",
                        "description": "Vulnerability Report Reference ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/reports/risk_summary": {
            "get": {
                "tags": [
                    "risk_summary"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/reports_risk_summary_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/{workload_id}/interfaces": {
            "post": {
                "tags": [
                    "workload_interfaces"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/workloads_interfaces_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "workload_interfaces"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of interface(s) to return. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/workloads_interfaces_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/workloads/{workload_id}/interfaces/{name}": {
            "get": {
                "tags": [
                    "workload_interfaces"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Interface Name",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/workloads_interfaces_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workload_interface"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "workload_id",
                        "description": "Workload UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Interface Name",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/service_bindings": {
            "get": {
                "tags": [
                    "service_bindings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of virtual service bindings to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "virtual_service",
                        "description": "Virtual service URI",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "workload",
                        "description": "Workload URI",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/service_bindings_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "service_bindings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/service_bindings_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/service_bindings/{service_binding_id}": {
            "get": {
                "tags": [
                    "service_bindings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_binding_id",
                        "description": "Service Binding ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/service_bindings_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "service_binding"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_binding_id",
                        "description": "Service Binding ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/rule_sets/{rule_set_id}/sec_rules": {
            "get": {
                "tags": [
                    "sec_rules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "external_data_reference",
                        "description": "A unique identifier within the external data source",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "external_data_set",
                        "description": "The data source from which a resource originates",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_rule_sets_sec_rules_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sec_rules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_rule_sets_sec_rules_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/rule_sets/{rule_set_id}/sec_rules/{sec_rule_id}": {
            "get": {
                "tags": [
                    "sec_rules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sec_rule_id",
                        "description": "Rule ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_rule_sets_sec_rules_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "sec_rule"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sec_rule_id",
                        "description": "Rule ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_rule_sets_sec_rules_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "sec_rule"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rule_set_id",
                        "description": "Rule Set ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sec_rule_id",
                        "description": "Rule ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/firewall_settings": {
            "get": {
                "tags": [
                    "firewall_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_firewall_settings_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "firewall_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_firewall_settings_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/pending": {
            "get": {
                "tags": [
                    "sec_policy_pending"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of policy objects to return (per type)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_pending_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "sec_policy_pending"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/allow": {
            "get": {
                "tags": [
                    "sec_policy_allows"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dst_container_workload",
                        "description": "The URI of the destination container workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dst_external_ip",
                        "description": "The external IP of the destination workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dst_workload",
                        "description": "The URI of the destination workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "network_type",
                        "description": "Type of network to check",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "brn",
                                "non_brn"
                            ]
                        }
                    },
                    {
                        "name": "port",
                        "description": "The specific port number to check",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "protocol",
                        "description": "The specific protocol number to check",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service",
                        "description": "The specific service to check",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "src_container_workload",
                        "description": "The URI of the source container workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "src_external_ip",
                        "description": "The external IP of the source workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "src_workload",
                        "description": "The URI of the source workload",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_allow_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/rule_search": {
            "post": {
                "tags": [
                    "sec_policy_rule_search"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_rule_search_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy": {
            "post": {
                "tags": [
                    "sec_policies"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "sec_policies"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/delete": {
            "put": {
                "tags": [
                    "sec_policies"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_delete_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/impact": {
            "post": {
                "tags": [
                    "sec_policies"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_impact_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}": {
            "get": {
                "tags": [
                    "sec_policies"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/dependencies": {
            "post": {
                "tags": [
                    "sec_policy"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_dependencies_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/restore": {
            "post": {
                "tags": [
                    "sec_policy"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/sec_policy_restore_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/sec_policy/{pversion}/modified_objects": {
            "get": {
                "tags": [
                    "sec_policy"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pversion",
                        "description": "Security Policy Version",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/sec_policy_modified_objects_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/support_bundle_requests": {
            "get": {
                "tags": [
                    "support_bundle_requests"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/support_bundle_requests_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "support_bundle_requests"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ending_at",
                        "description": "Time at which to exclude entries",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_logs",
                        "description": "Indicate whether to include logs",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "starting_at",
                        "description": "Time from which to include entries",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/support_bundle_requests_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/support_bundle_requests/{uuid}": {
            "get": {
                "tags": [
                    "support_bundle_requests"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "Support bundle request UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/support_bundle_requests_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "support_bundle_request"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uuid",
                        "description": "Support bundle request UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{user_id}/api_keys": {
            "get": {
                "tags": [
                    "api_keys"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_api_keys_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "api_keys"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_api_keys_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{user_id}/api_keys/{key_id}": {
            "get": {
                "tags": [
                    "api_keys"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key_id",
                        "description": "key_id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_api_keys_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "api_key"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key_id",
                        "description": "key_id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_api_keys_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "api_key"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key_id",
                        "description": "key_id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{user_id}/local_profile": {
            "post": {
                "tags": [
                    "user_local_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_local_profile_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user_local_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{user_id}/local_profile/password": {
            "put": {
                "tags": [
                    "user_local_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_local_profile_password_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{user_id}/local_profile/reinvite": {
            "put": {
                "tags": [
                    "user_local_profile"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "user_id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_local_profile_reinvite_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "users"
                ],
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "users"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "type",
                        "description": "User type which to filter, (e.g. local or external)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_login_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{id}/logout": {
            "put": {
                "tags": [
                    "user"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/users_logout_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/users/{id}/orgs": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "description": "User ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/users_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/roles": {
            "get": {
                "tags": [
                    "roles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_roles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/roles/{role_name}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "role_name",
                        "description": "Role Name",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_roles_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/auth_security_principals": {
            "get": {
                "tags": [
                    "org_auth_security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of the auth_security_principal to filter by. Supports partial matches",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "description": "Type (user or group) to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_auth_security_principals_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "org_auth_security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_auth_security_principals_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/auth_security_principals/{auth_security_principal_id}": {
            "get": {
                "tags": [
                    "org_auth_security_principals"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "auth_security_principal_id",
                        "description": "UUID of the auth_security_principal",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_auth_security_principals_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "org_auth_security_principal"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "auth_security_principal_id",
                        "description": "UUID of the auth_security_principal",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "org_auth_security_principal"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "auth_security_principal_id",
                        "description": "UUID of the auth_security_principal",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_auth_security_principals_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/access_restrictions": {
            "get": {
                "tags": [
                    "access_restrictions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_access_restrictions_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "access_restrictions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_access_restrictions_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/access_restrictions/{id}": {
            "get": {
                "tags": [
                    "access_restrictions"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "description": "access restriction id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/orgs_access_restrictions_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "access_restriction"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "description": "access restriction id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/orgs_access_restrictions_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "access_restriction"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "id",
                        "description": "access restriction id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/syslog/destinations": {
            "get": {
                "tags": [
                    "syslog_destinations"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_syslog_destinations_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "syslog_destinations"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_syslog_destinations_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/syslog/destinations/{syslog_destination_id}": {
            "get": {
                "tags": [
                    "syslog_destinations"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "syslog_destination_id",
                        "description": "PCE destination UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_syslog_destinations_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "syslog_destination"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "syslog_destination_id",
                        "description": "PCE destination UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_syslog_destinations_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "syslog_destination"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "syslog_destination_id",
                        "description": "PCE destination UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/events": {
            "get": {
                "tags": [
                    "org_setting"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_events_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "org_setting"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_events_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/trusted_proxy_ips": {
            "get": {
                "tags": [
                    "trusted_proxy_ips"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_trusted_proxy_ips_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "trusted_proxy_ips"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_trusted_proxy_ips_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/workloads": {
            "get": {
                "tags": [
                    "workload_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_workloads_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "workload_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_workloads_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/traffic_collector": {
            "post": {
                "tags": [
                    "traffic_collector_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_traffic_collector_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            },
            "get": {
                "tags": [
                    "traffic_collector_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_traffic_collector_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/traffic_collector/{traffic_collector_setting_id}": {
            "get": {
                "tags": [
                    "traffic_collector_settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "traffic_collector_setting_id",
                        "description": "traffic_collector setting UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_traffic_collector_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "traffic_collector_setting"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "traffic_collector_setting_id",
                        "description": "traffic_collector setting UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_traffic_collector_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "traffic_collector_setting"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "traffic_collector_setting_id",
                        "description": "traffic_collector setting UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings": {
            "get": {
                "tags": [
                    "settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "settings"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/service_accounts/{service_account_id}/api_keys": {
            "post": {
                "tags": [
                    "service_account_api_keys"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_account_id",
                        "description": "Service account UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/service_accounts_api_keys_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/service_accounts/{service_account_id}/api_keys/{api_key_id}": {
            "delete": {
                "tags": [
                    "service_account_api_key"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_account_id",
                        "description": "Service account UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api_key_id",
                        "description": "API Key ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/api_keys": {
            "get": {
                "tags": [
                    "org_api_keys"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of api keys to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "description": "Name of the service account to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "description": "Role URI (JSON-encoded string) to filter on",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "description": "State of api keys - active or expired",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "expired"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "description": "Type of principal - User or Service Account",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "user",
                                "service_account"
                            ]
                        }
                    },
                    {
                        "name": "username",
                        "description": "Username of the user to filter by",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/api_keys_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/api_keys/{api_key_id}": {
            "delete": {
                "tags": [
                    "org_api_key"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Org ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "api_key_id",
                        "description": "API Key ID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/optional_features": {
            "get": {
                "tags": [
                    "optional_features"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/optional_features_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "optional_features"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/optional_features_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/saml_configs": {
            "get": {
                "tags": [
                    "saml_configs"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_saml_configs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/authentication_settings/saml_configs/{uuid}": {
            "get": {
                "tags": [
                    "saml_configs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "SAMLConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_saml_configs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "saml_config"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "SAMLConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_saml_configs_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/saml_configs/{uuid}/pce_signing_cert": {
            "post": {
                "tags": [
                    "saml_config"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "SAMLConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_saml_configs_pce_signing_cert_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/ldap_configs": {
            "get": {
                "tags": [
                    "ldap_configs"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_ldap_configs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ldap_configs"
                ],
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_ldap_configs_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/ldap_configs/{uuid}": {
            "get": {
                "tags": [
                    "ldap_configs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "LDAPConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_ldap_configs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ldap_config"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "LDAPConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_ldap_configs_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ldap_config"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "LDAPConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/ldap_configs/{uuid}/verify_connection": {
            "post": {
                "tags": [
                    "ldap_config"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "uuid",
                        "description": "LDAPConfig UUID",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_ldap_configs_verify_connection_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings/password_policy": {
            "get": {
                "tags": [
                    "password_policy"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_password_policy_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "password_policy"
                ],
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_password_policy_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/authentication_settings": {
            "get": {
                "tags": [
                    "authentication_settings"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/authentication_settings_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "authentication_settings"
                ],
                "description": "",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/authentication_settings_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "health"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/health_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/agents/bulk_traffic_flows": {
            "post": {
                "tags": [
                    "bulk_traffic_flows"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/detected_core_services_summary": {
            "get": {
                "tags": [
                    "detected_core_services_summaries"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/detected_core_services_summary_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/detected_core_services": {
            "get": {
                "tags": [
                    "detected_core_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "action",
                        "description": "the action taken on the detected core services",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "skip",
                                "reject",
                                "accept",
                                "recommended"
                            ]
                        }
                    },
                    {
                        "name": "core_service_type",
                        "description": "get all detected core services for a particular core service type",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "the maximum results to be returned",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/detected_core_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/detected_core_services/{detected_core_service_id}": {
            "get": {
                "tags": [
                    "detected_core_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "detected_core_service_id",
                        "description": "UUID of the detected core service",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/detected_core_services_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "detected_core_services"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "detected_core_service_id",
                        "description": "UUID of the detected core service",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/detected_core_services_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/core_service_types": {
            "get": {
                "tags": [
                    "core_service_types"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/core_service_types_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/core_service_types/{core_service_type_id}": {
            "get": {
                "tags": [
                    "core_service_types"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "core_service_type_id",
                        "description": "UUID of the core service type",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/core_service_types_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "core_service_types"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "core_service_type_id",
                        "description": "UUID of the core service type",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/core_service_types_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "created_by",
                        "description": "User, agent, or system that created the event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_type",
                        "description": "Type of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of results to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "severity",
                        "description": "Severity of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "warning",
                                "err",
                                "notice",
                                "info",
                                "debug"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "description": "Status of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure",
                                "nil"
                            ]
                        }
                    },
                    {
                        "name": "timestamp[gte]",
                        "description": "Earliest event date to return (RFC 3339 format)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure",
                                "nil"
                            ]
                        }
                    },
                    {
                        "name": "timestamp[lte]",
                        "description": "Latest event date to return (RFC 3339 format)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure",
                                "nil"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/events_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/events/{composite_log_event_id}": {
            "get": {
                "tags": [
                    "events"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "composite_log_event_id",
                        "description": "UUID of event to return",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/events_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system_events": {
            "get": {
                "tags": [
                    "system_events"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "created_by",
                        "description": "User, agent, or system that created the event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "event_type",
                        "description": "Type of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of results to return",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "severity",
                        "description": "Severity of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "emerg",
                                "alert",
                                "crit",
                                "warning",
                                "err",
                                "notice",
                                "info",
                                "debug"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "description": "Status of event",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure"
                            ]
                        }
                    },
                    {
                        "name": "timestamp[gte]",
                        "description": "Earliest event date to return (RFC 3339 format)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure"
                            ]
                        }
                    },
                    {
                        "name": "timestamp[lte]",
                        "description": "Latest event date to return (RFC 3339 format)",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "success",
                                "failure"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/system_events_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/system_events/{composite_log_event_id}": {
            "get": {
                "tags": [
                    "system_events"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "composite_log_event_id",
                        "description": "UUID of system event to return",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/system_events_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/jobs": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job_type",
                        "description": "The job-type value to use for filtering the results.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max_results",
                        "description": "Maximum number of jobs to return.",
                        "required": false,
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/jobs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/jobs/{job_id}": {
            "get": {
                "tags": [
                    "jobs"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job_id",
                        "description": "ID of a job.",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/jobs_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "job"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "job_id",
                        "description": "ID of a job.",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/report_templates": {
            "get": {
                "tags": [
                    "report_templates"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/report_templates_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orgs/{org_id}/report_templates/{template_type}": {
            "get": {
                "tags": [
                    "report_templates"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "template_type",
                        "description": "Template type of the report",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/report_templates_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "report_templates"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "template_type",
                        "description": "Template type of the report",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/report_templates_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/report_schedules": {
            "get": {
                "tags": [
                    "report_schedules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/report_schedules_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "report_schedules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/report_schedules_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/report_schedules/{report_schedule_id}": {
            "get": {
                "tags": [
                    "report_schedules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_schedule_id",
                        "description": "UUID of the report schedule",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/report_schedules_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "report_schedules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_schedule_id",
                        "description": "UUID of the report schedule",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/report_schedules_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "report_schedules"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_schedule_id",
                        "description": "UUID of the report schedule",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/reports": {
            "get": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/reports_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/reports_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/reports/time_series_statistics": {
            "post": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/reports_time_series_statistics_post.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/reports/{report_id}": {
            "get": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_id",
                        "description": "UUID of the report",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/reports_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_id",
                        "description": "UUID of the report",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/reports_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/reports/{report_id}/download": {
            "get": {
                "tags": [
                    "reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "report_id",
                        "description": "UUID of the report",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/orgs/{org_id}/settings/reports": {
            "get": {
                "tags": [
                    "settings_reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/settings_reports_get.schema.json"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "settings_reports"
                ],
                "description": "",
                "parameters": [
                    {
                        "name": "org_id",
                        "description": "Organization",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "v2/settings_reports_put.schema.json"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Success"
                    }
                }
            }
        },
        "/node_available": {
            "get": {
                "tags": [
                    "root_level_methods"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/supercluster/leader": {
            "get": {
                "tags": [
                    "root_level_methods"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/product_version": {
            "get": {
                "tags": [
                    "root_level_methods"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/product_version_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/noop": {
            "get": {
                "tags": [
                    "root_level_methods"
                ],
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "v2/noop_get.schema.json"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "network_devices_network_endpoints_get": {
                "$ref": "v2/network_devices_network_endpoints_get.schema.json"
            },
            "network_devices_network_endpoints_post": {
                "$ref": "v2/network_devices_network_endpoints_post.schema.json"
            },
            "network_devices_network_endpoints_put": {
                "$ref": "v2/network_devices_network_endpoints_put.schema.json"
            },
            "network_devices_get": {
                "$ref": "v2/network_devices_get.schema.json"
            },
            "network_devices_multi_enforcement_instructions_request_post": {
                "$ref": "v2/network_devices_multi_enforcement_instructions_request_post.schema.json"
            },
            "network_devices_multi_enforcement_instructions_applied_post": {
                "$ref": "v2/network_devices_multi_enforcement_instructions_applied_post.schema.json"
            },
            "network_enforcement_nodes_network_devices_post": {
                "$ref": "v2/network_enforcement_nodes_network_devices_post.schema.json"
            },
            "network_devices_put": {
                "$ref": "v2/network_devices_put.schema.json"
            },
            "network_devices_enforcement_instructions_request_post": {
                "$ref": "v2/network_devices_enforcement_instructions_request_post.schema.json"
            },
            "network_devices_enforcement_instructions_applied_post": {
                "$ref": "v2/network_devices_enforcement_instructions_applied_post.schema.json"
            },
            "network_enforcement_nodes_get": {
                "$ref": "v2/network_enforcement_nodes_get.schema.json"
            },
            "network_enforcement_nodes_virtual_server_discovery_jobs_get": {
                "$ref": "v2/network_enforcement_nodes_virtual_server_discovery_jobs_get.schema.json"
            },
            "network_enforcement_nodes_put": {
                "$ref": "v2/network_enforcement_nodes_put.schema.json"
            },
            "login_users_authenticate_post": {
                "$ref": "v2/login_users_authenticate_post.schema.json"
            },
            "login_users_password_put": {
                "$ref": "v2/login_users_password_put.schema.json"
            },
            "traffic_flows_database_metrics_get": {
                "$ref": "v2/traffic_flows_database_metrics_get.schema.json"
            },
            "traffic_flows_async_queries_post": {
                "$ref": "v2/traffic_flows_async_queries_post.schema.json"
            },
            "traffic_flows_async_queries_get": {
                "$ref": "v2/traffic_flows_async_queries_get.schema.json"
            },
            "traffic_flows_async_queries_download_get": {
                "$ref": "v2/traffic_flows_async_queries_download_get.schema.json"
            },
            "traffic_flows_async_queries_update_rules_put": {
                "$ref": "v2/traffic_flows_async_queries_update_rules_put.schema.json"
            },
            "traffic_flows_async_queries_put": {
                "$ref": "v2/traffic_flows_async_queries_put.schema.json"
            },
            "traffic_flows_traffic_analysis_queries_post": {
                "$ref": "v2/traffic_flows_traffic_analysis_queries_post.schema.json"
            },
            "workloads_post": {
                "$ref": "v2/workloads_post.schema.json"
            },
            "workloads_get": {
                "$ref": "v2/workloads_get.schema.json"
            },
            "workloads_unpair_put": {
                "$ref": "v2/workloads_unpair_put.schema.json"
            },
            "workloads_bulk_create_put": {
                "$ref": "v2/workloads_bulk_create_put.schema.json"
            },
            "workloads_bulk_update_put": {
                "$ref": "v2/workloads_bulk_update_put.schema.json"
            },
            "workloads_bulk_delete_put": {
                "$ref": "v2/workloads_bulk_delete_put.schema.json"
            },
            "workloads_risk_details_get": {
                "$ref": "v2/workloads_risk_details_get.schema.json"
            },
            "workloads_put": {
                "$ref": "v2/workloads_put.schema.json"
            },
            "labels_get": {
                "$ref": "v2/labels_get.schema.json"
            },
            "labels_post": {
                "$ref": "v2/labels_post.schema.json"
            },
            "labels_put": {
                "$ref": "v2/labels_put.schema.json"
            },
            "security_principals_get": {
                "$ref": "v2/security_principals_get.schema.json"
            },
            "security_principals_post": {
                "$ref": "v2/security_principals_post.schema.json"
            },
            "security_principals_bulk_create_put": {
                "$ref": "v2/security_principals_bulk_create_put.schema.json"
            },
            "security_principals_put": {
                "$ref": "v2/security_principals_put.schema.json"
            },
            "pairing_profiles_get": {
                "$ref": "v2/pairing_profiles_get.schema.json"
            },
            "pairing_profiles_post": {
                "$ref": "v2/pairing_profiles_post.schema.json"
            },
            "pairing_profiles_put": {
                "$ref": "v2/pairing_profiles_put.schema.json"
            },
            "pairing_profiles_pairing_key_post": {
                "$ref": "v2/pairing_profiles_pairing_key_post.schema.json"
            },
            "sec_policy_enforcement_boundaries_get": {
                "$ref": "v2/sec_policy_enforcement_boundaries_get.schema.json"
            },
            "sec_policy_enforcement_boundaries_post": {
                "$ref": "v2/sec_policy_enforcement_boundaries_post.schema.json"
            },
            "sec_policy_enforcement_boundaries_put": {
                "$ref": "v2/sec_policy_enforcement_boundaries_put.schema.json"
            },
            "sec_policy_virtual_services_get": {
                "$ref": "v2/sec_policy_virtual_services_get.schema.json"
            },
            "sec_policy_virtual_services_post": {
                "$ref": "v2/sec_policy_virtual_services_post.schema.json"
            },
            "sec_policy_virtual_services_bulk_create_put": {
                "$ref": "v2/sec_policy_virtual_services_bulk_create_put.schema.json"
            },
            "sec_policy_virtual_services_bulk_update_put": {
                "$ref": "v2/sec_policy_virtual_services_bulk_update_put.schema.json"
            },
            "sec_policy_virtual_services_put": {
                "$ref": "v2/sec_policy_virtual_services_put.schema.json"
            },
            "sec_policy_ip_lists_get": {
                "$ref": "v2/sec_policy_ip_lists_get.schema.json"
            },
            "sec_policy_ip_lists_post": {
                "$ref": "v2/sec_policy_ip_lists_post.schema.json"
            },
            "sec_policy_ip_lists_put": {
                "$ref": "v2/sec_policy_ip_lists_put.schema.json"
            },
            "sec_policy_label_groups_post": {
                "$ref": "v2/sec_policy_label_groups_post.schema.json"
            },
            "sec_policy_label_groups_get": {
                "$ref": "v2/sec_policy_label_groups_get.schema.json"
            },
            "sec_policy_label_groups_member_of_get": {
                "$ref": "v2/sec_policy_label_groups_member_of_get.schema.json"
            },
            "labels_summary": {
                "$ref": "v2/labels_summary.schema.json"
            },
            "sec_policy_label_groups_put": {
                "$ref": "v2/sec_policy_label_groups_put.schema.json"
            },
            "sec_policy_services_get": {
                "$ref": "v2/sec_policy_services_get.schema.json"
            },
            "sec_policy_services_post": {
                "$ref": "v2/sec_policy_services_post.schema.json"
            },
            "sec_policy_services_put": {
                "$ref": "v2/sec_policy_services_put.schema.json"
            },
            "sec_policy_virtual_servers_post": {
                "$ref": "v2/sec_policy_virtual_servers_post.schema.json"
            },
            "sec_policy_virtual_servers_get": {
                "$ref": "v2/sec_policy_virtual_servers_get.schema.json"
            },
            "sec_policy_virtual_servers_put": {
                "$ref": "v2/sec_policy_virtual_servers_put.schema.json"
            },
            "sec_policy_rule_sets_get": {
                "$ref": "v2/sec_policy_rule_sets_get.schema.json"
            },
            "sec_policy_rule_sets_post": {
                "$ref": "v2/sec_policy_rule_sets_post.schema.json"
            },
            "sec_policy_rule_sets_put": {
                "$ref": "v2/sec_policy_rule_sets_put.schema.json"
            },
            "container_clusters_container_workload_profiles_get": {
                "$ref": "v2/container_clusters_container_workload_profiles_get.schema.json"
            },
            "container_clusters_container_workload_profiles_post": {
                "$ref": "v2/container_clusters_container_workload_profiles_post.schema.json"
            },
            "container_clusters_container_workload_profiles_update_put": {
                "$ref": "v2/container_clusters_container_workload_profiles_update_put.schema.json"
            },
            "container_clusters_container_workload_profiles_put": {
                "$ref": "v2/container_clusters_container_workload_profiles_put.schema.json"
            },
            "container_clusters_get": {
                "$ref": "v2/container_clusters_get.schema.json"
            },
            "container_clusters_post": {
                "$ref": "v2/container_clusters_post.schema.json"
            },
            "container_clusters_put": {
                "$ref": "v2/container_clusters_put.schema.json"
            },
            "container_clusters_service_backends_get": {
                "$ref": "v2/container_clusters_service_backends_get.schema.json"
            },
            "vens_get": {
                "$ref": "v2/vens_get.schema.json"
            },
            "vens_unpair_put": {
                "$ref": "v2/vens_unpair_put.schema.json"
            },
            "vens_upgrade_put": {
                "$ref": "v2/vens_upgrade_put.schema.json"
            },
            "vens_authentication_recovery_put": {
                "$ref": "v2/vens_authentication_recovery_put.schema.json"
            },
            "vens_statistics_post": {
                "$ref": "v2/vens_statistics_post.schema.json"
            },
            "vens_put": {
                "$ref": "v2/vens_put.schema.json"
            },
            "orgs_permissions_get": {
                "$ref": "v2/orgs_permissions_get.schema.json"
            },
            "orgs_permissions_post": {
                "$ref": "v2/orgs_permissions_post.schema.json"
            },
            "orgs_permissions_put": {
                "$ref": "v2/orgs_permissions_put.schema.json"
            },
            "slbs_post": {
                "$ref": "v2/slbs_post.schema.json"
            },
            "slbs_get": {
                "$ref": "v2/slbs_get.schema.json"
            },
            "slbs_put": {
                "$ref": "v2/slbs_put.schema.json"
            },
            "discovered_virtual_servers_get": {
                "$ref": "v2/discovered_virtual_servers_get.schema.json"
            },
            "service_accounts_post": {
                "$ref": "v2/service_accounts_post.schema.json"
            },
            "service_accounts_get": {
                "$ref": "v2/service_accounts_get.schema.json"
            },
            "service_accounts_put": {
                "$ref": "v2/service_accounts_put.schema.json"
            },
            "kubernetes_workloads_get": {
                "$ref": "v2/kubernetes_workloads_get.schema.json"
            },
            "software_ven_releases_images_get": {
                "$ref": "v2/software_ven_releases_images_get.schema.json"
            },
            "software_ven_releases_get": {
                "$ref": "v2/software_ven_releases_get.schema.json"
            },
            "software_ven_releases_default_put": {
                "$ref": "v2/software_ven_releases_default_put.schema.json"
            },
            "software_ven_releases_defaults_put": {
                "$ref": "v2/software_ven_releases_defaults_put.schema.json"
            },
            "agents_get": {
                "$ref": "v2/agents_get.schema.json"
            },
            "agents_update_put": {
                "$ref": "v2/agents_update_put.schema.json"
            },
            "vulnerabilities_get": {
                "$ref": "v2/vulnerabilities_get.schema.json"
            },
            "vulnerabilities_post": {
                "$ref": "v2/vulnerabilities_post.schema.json"
            },
            "vulnerabilities_put": {
                "$ref": "v2/vulnerabilities_put.schema.json"
            },
            "vulnerability_reports_get": {
                "$ref": "v2/vulnerability_reports_get.schema.json"
            },
            "vulnerability_reports_put": {
                "$ref": "v2/vulnerability_reports_put.schema.json"
            },
            "reports_risk_summary_get": {
                "$ref": "v2/reports_risk_summary_get.schema.json"
            },
            "workloads_interfaces_post": {
                "$ref": "v2/workloads_interfaces_post.schema.json"
            },
            "workloads_interfaces_get": {
                "$ref": "v2/workloads_interfaces_get.schema.json"
            },
            "service_bindings_get": {
                "$ref": "v2/service_bindings_get.schema.json"
            },
            "service_bindings_post": {
                "$ref": "v2/service_bindings_post.schema.json"
            },
            "sec_policy_rule_sets_sec_rules_get": {
                "$ref": "v2/sec_policy_rule_sets_sec_rules_get.schema.json"
            },
            "sec_policy_rule_sets_sec_rules_post": {
                "$ref": "v2/sec_policy_rule_sets_sec_rules_post.schema.json"
            },
            "sec_policy_rule_sets_sec_rules_put": {
                "$ref": "v2/sec_policy_rule_sets_sec_rules_put.schema.json"
            },
            "sec_policy_firewall_settings_get": {
                "$ref": "v2/sec_policy_firewall_settings_get.schema.json"
            },
            "sec_policy_firewall_settings_put": {
                "$ref": "v2/sec_policy_firewall_settings_put.schema.json"
            },
            "sec_policy_pending_get": {
                "$ref": "v2/sec_policy_pending_get.schema.json"
            },
            "sec_policy_allow_get": {
                "$ref": "v2/sec_policy_allow_get.schema.json"
            },
            "sec_policy_rule_search_post": {
                "$ref": "v2/sec_policy_rule_search_post.schema.json"
            },
            "sec_policy_post": {
                "$ref": "v2/sec_policy_post.schema.json"
            },
            "sec_policy_get": {
                "$ref": "v2/sec_policy_get.schema.json"
            },
            "sec_policy_delete_put": {
                "$ref": "v2/sec_policy_delete_put.schema.json"
            },
            "sec_policy_impact_post": {
                "$ref": "v2/sec_policy_impact_post.schema.json"
            },
            "sec_policy_dependencies_post": {
                "$ref": "v2/sec_policy_dependencies_post.schema.json"
            },
            "sec_policy_restore_post": {
                "$ref": "v2/sec_policy_restore_post.schema.json"
            },
            "sec_policy_modified_objects_get": {
                "$ref": "v2/sec_policy_modified_objects_get.schema.json"
            },
            "support_bundle_requests_get": {
                "$ref": "v2/support_bundle_requests_get.schema.json"
            },
            "support_bundle_requests_post": {
                "$ref": "v2/support_bundle_requests_post.schema.json"
            },
            "users_api_keys_get": {
                "$ref": "v2/users_api_keys_get.schema.json"
            },
            "users_api_keys_post": {
                "$ref": "v2/users_api_keys_post.schema.json"
            },
            "users_api_keys_put": {
                "$ref": "v2/users_api_keys_put.schema.json"
            },
            "users_local_profile_post": {
                "$ref": "v2/users_local_profile_post.schema.json"
            },
            "users_local_profile_password_put": {
                "$ref": "v2/users_local_profile_password_put.schema.json"
            },
            "users_local_profile_reinvite_put": {
                "$ref": "v2/users_local_profile_reinvite_put.schema.json"
            },
            "users_post": {
                "$ref": "v2/users_post.schema.json"
            },
            "users_get": {
                "$ref": "v2/users_get.schema.json"
            },
            "users_login_get": {
                "$ref": "v2/users_login_get.schema.json"
            },
            "users_logout_put": {
                "$ref": "v2/users_logout_put.schema.json"
            },
            "users_put": {
                "$ref": "v2/users_put.schema.json"
            },
            "orgs_roles_get": {
                "$ref": "v2/orgs_roles_get.schema.json"
            },
            "orgs_auth_security_principals_get": {
                "$ref": "v2/orgs_auth_security_principals_get.schema.json"
            },
            "orgs_auth_security_principals_post": {
                "$ref": "v2/orgs_auth_security_principals_post.schema.json"
            },
            "orgs_auth_security_principals_put": {
                "$ref": "v2/orgs_auth_security_principals_put.schema.json"
            },
            "orgs_access_restrictions_get": {
                "$ref": "v2/orgs_access_restrictions_get.schema.json"
            },
            "orgs_access_restrictions_post": {
                "$ref": "v2/orgs_access_restrictions_post.schema.json"
            },
            "orgs_access_restrictions_put": {
                "$ref": "v2/orgs_access_restrictions_put.schema.json"
            },
            "settings_syslog_destinations_get": {
                "$ref": "v2/settings_syslog_destinations_get.schema.json"
            },
            "settings_syslog_destinations_post": {
                "$ref": "v2/settings_syslog_destinations_post.schema.json"
            },
            "settings_syslog_destinations_put": {
                "$ref": "v2/settings_syslog_destinations_put.schema.json"
            },
            "settings_events_get": {
                "$ref": "v2/settings_events_get.schema.json"
            },
            "settings_events_put": {
                "$ref": "v2/settings_events_put.schema.json"
            },
            "settings_trusted_proxy_ips_get": {
                "$ref": "v2/settings_trusted_proxy_ips_get.schema.json"
            },
            "settings_trusted_proxy_ips_put": {
                "$ref": "v2/settings_trusted_proxy_ips_put.schema.json"
            },
            "settings_workloads_get": {
                "$ref": "v2/settings_workloads_get.schema.json"
            },
            "settings_workloads_put": {
                "$ref": "v2/settings_workloads_put.schema.json"
            },
            "settings_traffic_collector_post": {
                "$ref": "v2/settings_traffic_collector_post.schema.json"
            },
            "settings_traffic_collector_get": {
                "$ref": "v2/settings_traffic_collector_get.schema.json"
            },
            "settings_traffic_collector_put": {
                "$ref": "v2/settings_traffic_collector_put.schema.json"
            },
            "settings_get": {
                "$ref": "v2/settings_get.schema.json"
            },
            "settings_put": {
                "$ref": "v2/settings_put.schema.json"
            },
            "service_accounts_api_keys_post": {
                "$ref": "v2/service_accounts_api_keys_post.schema.json"
            },
            "api_keys_get": {
                "$ref": "v2/api_keys_get.schema.json"
            },
            "optional_features_get": {
                "$ref": "v2/optional_features_get.schema.json"
            },
            "optional_features_put": {
                "$ref": "v2/optional_features_put.schema.json"
            },
            "authentication_settings_saml_configs_get": {
                "$ref": "v2/authentication_settings_saml_configs_get.schema.json"
            },
            "authentication_settings_saml_configs_put": {
                "$ref": "v2/authentication_settings_saml_configs_put.schema.json"
            },
            "authentication_settings_saml_configs_pce_signing_cert_post": {
                "$ref": "v2/authentication_settings_saml_configs_pce_signing_cert_post.schema.json"
            },
            "authentication_settings_ldap_configs_get": {
                "$ref": "v2/authentication_settings_ldap_configs_get.schema.json"
            },
            "authentication_settings_ldap_configs_post": {
                "$ref": "v2/authentication_settings_ldap_configs_post.schema.json"
            },
            "authentication_settings_ldap_configs_put": {
                "$ref": "v2/authentication_settings_ldap_configs_put.schema.json"
            },
            "authentication_settings_ldap_configs_verify_connection_post": {
                "$ref": "v2/authentication_settings_ldap_configs_verify_connection_post.schema.json"
            },
            "authentication_settings_password_policy_get": {
                "$ref": "v2/authentication_settings_password_policy_get.schema.json"
            },
            "authentication_settings_password_policy_put": {
                "$ref": "v2/authentication_settings_password_policy_put.schema.json"
            },
            "authentication_settings_get": {
                "$ref": "v2/authentication_settings_get.schema.json"
            },
            "authentication_settings_put": {
                "$ref": "v2/authentication_settings_put.schema.json"
            },
            "health_get": {
                "$ref": "v2/health_get.schema.json"
            },
            "detected_core_services_summary_get": {
                "$ref": "v2/detected_core_services_summary_get.schema.json"
            },
            "detected_core_services_get": {
                "$ref": "v2/detected_core_services_get.schema.json"
            },
            "detected_core_services_put": {
                "$ref": "v2/detected_core_services_put.schema.json"
            },
            "core_service_types_get": {
                "$ref": "v2/core_service_types_get.schema.json"
            },
            "core_service_types_put": {
                "$ref": "v2/core_service_types_put.schema.json"
            },
            "events_get": {
                "$ref": "v2/events_get.schema.json"
            },
            "system_events_get": {
                "$ref": "v2/system_events_get.schema.json"
            },
            "jobs_get": {
                "$ref": "v2/jobs_get.schema.json"
            },
            "report_templates_get": {
                "$ref": "v2/report_templates_get.schema.json"
            },
            "report_templates_put": {
                "$ref": "v2/report_templates_put.schema.json"
            },
            "report_schedules_get": {
                "$ref": "v2/report_schedules_get.schema.json"
            },
            "report_schedules_post": {
                "$ref": "v2/report_schedules_post.schema.json"
            },
            "report_schedules_put": {
                "$ref": "v2/report_schedules_put.schema.json"
            },
            "reports_get": {
                "$ref": "v2/reports_get.schema.json"
            },
            "reports_time_series_statistics_post": {
                "$ref": "v2/reports_time_series_statistics_post.schema.json"
            },
            "reports_post": {
                "$ref": "v2/reports_post.schema.json"
            },
            "reports_put": {
                "$ref": "v2/reports_put.schema.json"
            },
            "settings_reports_get": {
                "$ref": "v2/settings_reports_get.schema.json"
            },
            "settings_reports_put": {
                "$ref": "v2/settings_reports_put.schema.json"
            },
            "product_version_get": {
                "$ref": "v2/product_version_get.schema.json"
            },
            "noop_get": {
                "$ref": "v2/noop_get.schema.json"
            }
        }
    }
}
